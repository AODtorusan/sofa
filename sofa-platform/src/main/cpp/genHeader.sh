#!/bin/bash

filename="src/sofa.h"
output="src/sofa_bridj.h"

cat > $output <<EOL
// This file is automatically generated by $0.
//
// It is a modified version of sofa.h that includes an export macro and 
//   and adds the source file comments to the function signatures.
//

#ifdef _WIN32
#    define SOFAExport __declspec(dllexport)
#else
#    define SOFAExport
#endif

EOL

multiLine=0
while read line; do
    if [[ $line =~ ^\s*\/\*\-\- ]]; then break; fi
    
    if [[ $line =~ iau[a-zA-Z0-9]+\s*\( ]]; then 
        # Function name without the iau prefix
        func=$(echo "$line" | grep -Po '(?<=iau).*?(?=\()')
        # Source file for the function
        source="src/${func,,}.c"
        # Is this a multi-line function signature?
        multiLine=$([[ "$line" =~ \)\s*\;\s*$ ]]; echo $?)
        # Process the source function and echo the result
        awk '
BEGIN { signature="SOFAExport " }
/^\s*\#/ {next}
/^\s*$/  {next}
/^\s*\{/ {
    gsub( /\s+/, " ", signature )
    print signature ";"
    nextfile
}
/^\s*\*\*?/ { gsub( /\*\*/, " *"  ); print; next }
/^\s*\/\*/  { gsub( /\/\*/, "/**" ); print; next }
/^\s*\*\//  { gsub( /\*\//, " */" ); print; next }
{ signature = signature $0 }' "$source"
    elif [[ $multiLine == 1 ]]; then
        # Skip over the remaining part of multi-line function signatures
        multiLine=$([[ "$line" =~ \)\s*\;\s*$ ]]; echo $?)
    else 
        echo "$line"
    fi
done < $filename >> $output
